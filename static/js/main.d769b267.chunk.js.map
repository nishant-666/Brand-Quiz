{"version":3,"sources":["assets/audio/correct-answer.mp3","assets/audio/wrong-answer.mp3","assets/audio/button-sound.mp3","components/Home.js","utils/is-empty.js","components/quiz/message.js","components/quiz/QuizInstructions.js","components/quiz/Play.js","components/quiz/QuizSummary.js","App.js","index.js"],"names":["module","exports","Home","Helmet","Container","fluid","style","textAlign","Card","centered","padding","Content","Header","size","fontSize","Subheader","to","Button","primary","Icon","name","isEmpty","value","undefined","Object","keys","length","trim","MessageExampleInfo","Message","info","QuizInstructions","List","bulleted","Item","Play","props","displayQuestions","questions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","numberOfQuestions","previousRandomNumbers","showOptions","handleDisableButton","handleOptionClick","e","target","innerHTML","toLowerCase","correctTimeout","setTimeout","correctSound","current","play","correctAnswer","wrongTimeout","wrongSound","wrongAnswer","handleNextButtonClick","playButtonSound","prevState","handlePreviousButtonClick","handleQuitButtonClick","window","confirm","history","push","handleButtonClick","id","buttonSound","M","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestions","endGame","navigator","vibrate","wrongAnswers","Array","from","document","querySelectorAll","forEach","option","visibility","usedFiftyFifty","handleHints","hints","indexOfAnswer","options","index","randomNumber","Math","round","random","includes","concat","handleFiftyFifty","fiftyFifty","randomNumbers","count","newRandomNumber","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","floor","seconds","clearInterval","time","previousButtonDisabled","nextButtonDisabled","alert","playerStats","React","createRef","this","ref","src","correctNotification","wrongNotification","width","question","className","float","color","classnames","onClick","marginTop","borderRadius","optionA","optionB","optionC","optionD","Group","positive","labelPosition","icon","content","Component","QuizSummary","hintsUsed","fiftyFiftyUsed","location","stats","remark","userScore","toFixed","App","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d769b267.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/correct-answer.ee6aadae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong-answer.c7106542.mp3\";","module.exports = __webpack_public_path__ + \"static/media/button-sound.32194199.mp3\";","import React, { Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Button, Container, Header } from 'semantic-ui-react'\nconst Home = () => (\n    <Fragment>\n        <Helmet>\n            <title>Home || Brand Quiz</title></Helmet>\n        <Container fluid style={{textAlign:\"center\"}}>\n            <Card centered fluid style={{padding:70}}>\n                <Card.Content>\n                <Header size='huge' style={{fontSize:40}}>Brand Quiz</Header>\n                <Header.Subheader>\n                    <h6>Test your brand knowledge!</h6>\n                </Header.Subheader>\n                </Card.Content>\n                <Card.Content>\n                <Link to=\"/play/instructions\">\n                <Button primary> <Icon name='book' />Read Quiz Instructions</Button>\n                </Link>\n                <Link to=\"/play/quiz\">\n                <Button primary> <Icon name='play circle outline' />Start Quiz</Button>\n                </Link>\n                </Card.Content>\n            </Card>\n            </Container>\n    </Fragment>\n);\n\nexport default Home;","const isEmpty = (value) => \n    value === undefined ||\n    value == null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nconst MessageExampleInfo = () => (\r\n  <Message info>\r\n    <Message.Header>All the Best !</Message.Header>\r\n    \r\n  </Message>\r\n)\r\n\r\nexport default MessageExampleInfo\r\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { List, Card, Container,Button,Icon, Header, Divider } from 'semantic-ui-react'\nimport isEmpty from '../../utils/is-empty';\nimport Message from './message'\n\nconst QuizInstructions = () => (\n    <Fragment>\n        <Helmet><title>Quiz Instructions || Brand Quiz</title></Helmet>\n        <Container fluid style={{textAlign:\"center\"}}>\n        <Card fluid style={{padding:40}}>\n        <Header size='large'>Quiz Instructions</Header>\n        <Card.Content>\n        <List bulleted style={{fontSize:16}}>\n            <List.Item>The game has a duration of 6 minutes and ends as soon as your time elapses.</List.Item>\n            <List.Item>Each game consists of 20 questions.</List.Item>\n            <List.Item>Each question has four options.</List.Item>\n            <List.Item>Select the option which you think is right by clicking it.</List.Item>\n            <List.Item>Feel free to quit the game at any time.</List.Item>\n            <List.Item>The timer starts as soon as the game loads.</List.Item>\n            <List.Item>Do you have what it takes? Let's find out, just click the play button!</List.Item>\n\n        </List>\n        </Card.Content>\n        <Message/>\n        <Card.Content>\n        \n        <Link to=\"/\">\n        <Button primary> <Icon name='backward' />Go back</Button>\n        </Link>\n        <Link to=\"/play/quiz\">\n        <Button primary> <Icon name='play circle outline' />Start Quiz</Button>\n        </Link>\n        </Card.Content>\n       \n        </Card>\n        </Container>\n         </Fragment>\n);\n\nexport default QuizInstructions;","import React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport M from 'materialize-css';\nimport classnames from 'classnames';\nimport { List, Card, Container,Button,Icon, Header, Divider } from 'semantic-ui-react'\nimport questions from '../../questions.json';\nimport { Link } from 'react-router-dom';\nimport isEmpty from '../../utils/is-empty';\n\nimport correctNotification from '../../assets/audio/correct-answer.mp3';\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3';\nimport buttonSound from '../../assets/audio/button-sound.mp3';\n\nclass Play extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            questions,\n            currentQuestion: {},\n            nextQuestion: {},\n            previousQuestion: {},\n            answer: '',\n            numberOfQuestions: 0,\n            numberOfAnsweredQuestions: 0,\n            currentQuestionIndex: 0,\n            score: 0,\n            correctAnswers: 0,\n            wrongAnswers: 0,\n            nextButtonDisabled: false,\n            previousButtonDisabled: true,\n            previousRandomNumbers: [],\n            time: {}\n        };\n        this.interval = null;\n        this.correctSound = React.createRef();\n        this.wrongSound = React.createRef();\n        this.buttonSound = React.createRef();\n    }\n\n    componentDidMount () {\n        const { questions, currentQuestion, nextQuestion, previousQuestion } = this.state;\n        this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n        this.startTimer();\n    }\n\n    componentWillUnmount () {\n        clearInterval(this.interval);\n    }\n\n    displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\n        let { currentQuestionIndex } = this.state;   \n        if (!isEmpty(this.state.questions)) {\n            questions = this.state.questions;\n            currentQuestion = questions[currentQuestionIndex];\n            nextQuestion = questions[currentQuestionIndex + 1];\n            previousQuestion = questions[currentQuestionIndex - 1];\n            const answer = currentQuestion.answer;\n            this.setState({\n                currentQuestion,\n                nextQuestion,\n                previousQuestion,\n                numberOfQuestions: questions.length,\n                answer,\n                previousRandomNumbers: []\n            }, () => {\n                this.showOptions();\n                this.handleDisableButton();\n            });\n        }     \n    };\n\n    handleOptionClick = (e) => {\n        if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            this.correctTimeout = setTimeout(() => {\n                this.correctSound.current.play();\n            }, 500);\n            this.correctAnswer();\n        } else {\n            this.wrongTimeout = setTimeout(() => {\n                this.wrongSound.current.play();\n            }, 500);\n            this.wrongAnswer();\n        }\n    }\n\n    handleNextButtonClick = () => {\n        this.playButtonSound();\n        if (this.state.nextQuestion !== undefined) {\n            this.setState(prevState => ({\n                currentQuestionIndex: prevState.currentQuestionIndex + 1\n            }), () => {\n                this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            });\n        }\n    };\n\n    handlePreviousButtonClick = () => {\n        this.playButtonSound();\n        if (this.state.previousQuestion !== undefined) {\n            this.setState(prevState => ({\n                currentQuestionIndex: prevState.currentQuestionIndex - 1\n            }), () => {\n                this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            });\n        }\n    };\n\n    handleQuitButtonClick = () => {\n        this.playButtonSound();\n        if (window.confirm('Gave up already?')) {\n            this.props.history.push('/');\n        }\n    };\n\n    handleButtonClick = (e) => {\n        switch (e.target.id) {\n            case 'next-button':\n                this.handleNextButtonClick();\n                break;\n\n            case 'previous-button':\n                this.handlePreviousButtonClick();\n                break;\n\n            case 'quit-button':\n                this.handleQuitButtonClick();\n                break;\n\n            default:\n                break;\n        }\n        \n    };\n\n    playButtonSound = () => {\n        this.buttonSound.current.play();\n    };\n\n    correctAnswer = () => {\n        M.toast({\n            html: 'Correct Answer!',\n            classes: 'toast-valid',\n            displayLength: 2500\n        });\n        this.setState(prevState => ({\n            score: prevState.score + 1,\n            correctAnswers: prevState.correctAnswers + 1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n        }), () => {            \n            if (this.state.nextQuestion === undefined) {\n                this.endGame();\n            } else {\n                this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            }\n        });\n    }\n\n    wrongAnswer = () => {\n        navigator.vibrate(1000);\n        M.toast({\n            html: 'Wrong Answer!',\n            classes: 'toast-invalid',\n            displayLength: 2500\n        });\n        this.setState(prevState => ({\n            wrongAnswers: prevState.wrongAnswers + 1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n        }), () => {\n            if (this.state.nextQuestion === undefined) {\n                this.endGame();\n            } else {\n                this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            }\n        });\n    }\n\n    showOptions = () => {\n        const options = Array.from(document.querySelectorAll('.option'));\n\n        options.forEach(option => {\n            option.style.visibility = 'visible';\n        });\n\n        this.setState({\n            usedFiftyFifty: false\n        });\n    }\n\n    handleHints = () => {\n        if (this.state.hints > 0) {\n            const options = Array.from(document.querySelectorAll('.option'));\n            let indexOfAnswer;\n\n            options.forEach((option, index) => {\n                if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n                    indexOfAnswer = index;\n                }\n            });\n\n            while (true) {\n                const randomNumber = Math.round(Math.random() * 3);\n                if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n                    options.forEach((option, index) => {\n                        if (index === randomNumber) {\n                            option.style.visibility = 'hidden';\n                            this.setState((prevState) => ({\n                                hints: prevState.hints - 1,\n                                previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n                            }));\n                        }\n                    });\n                    break;\n                }\n                if (this.state.previousRandomNumbers.length >= 3) break;\n            }\n        }\n    }\n\n    handleFiftyFifty = () => {\n        if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\n            const options = document.querySelectorAll('.option');\n            const randomNumbers = [];\n            let indexOfAnswer;\n\n            options.forEach((option, index) => {\n                if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n                    indexOfAnswer = index;\n                }\n            });\n\n            let count = 0;\n            do {\n                const randomNumber = Math.round(Math.random() * 3);\n                if (randomNumber !== indexOfAnswer) {\n                    if (randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n                            randomNumbers.push(randomNumber);\n                            count ++;\n                    } else {\n                        while (true) {\n                            const newRandomNumber = Math.round(Math.random() * 3);\n                            if (!randomNumbers.includes(newRandomNumber) && newRandomNumber !== indexOfAnswer) {\n                                randomNumbers.push(newRandomNumber);\n                                count ++;\n                                break;\n                            }\n                        }\n                    }\n                }\n            } while (count < 2);\n\n           \n        \n        }\n    }\n\n    startTimer = () => {\n        const countDownTime = Date.now() + 360000;\n        this.interval = setInterval(() => {\n            const now = new Date();\n            const distance = countDownTime - now;\n\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            if (distance < 0) {\n                clearInterval(this.interval);\n                this.setState({\n                    time: {\n                        minutes: 0,\n                        seconds: 0\n                    }\n                }, () => {\n                    this.endGame();\n                });\n            } else {\n                this.setState({\n                    time: {\n                        minutes,\n                        seconds,\n                        distance\n                    }\n                });\n            }\n        }, 1000);\n    }\n\n    handleDisableButton = () => {\n        if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\n            this.setState({\n                previousButtonDisabled: true\n            });\n        } else {\n            this.setState({\n                previousButtonDisabled: false\n            });\n        }\n\n        if (this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\n            this.setState({\n                nextButtonDisabled: true\n            });\n        } else {\n            this.setState({\n                nextButtonDisabled: false\n            });\n        }\n    }\n\n    endGame = () => {\n        alert('Quiz has eneded!');\n        const { state } = this;\n        const playerStats = {\n            score: state.score,\n            numberOfQuestions: state.numberOfQuestions,\n            numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\n            correctAnswers: state.correctAnswers,\n        };\n        setTimeout(() => {\n            this.props.history.push('/play/quizSummary', playerStats);\n        }, 1000);\n    }\n\n    render () {\n        const { \n            currentQuestion, \n            currentQuestionIndex, \n            numberOfQuestions,\n            time \n        } = this.state;\n\n        return (\n            <Fragment>\n                <Helmet><title>Play the Game || Brand Quiz</title></Helmet>\n                <Fragment>\n                    <audio ref={this.correctSound} src={correctNotification}></audio>\n                    <audio ref={this.wrongSound} src={wrongNotification}></audio>\n                    <audio ref={this.buttonSound} src={buttonSound}></audio>\n                </Fragment>\n                <Container fluid style={{textAlign:\"center\",width:'100%'}}>\n                <Card fluid style={{padding:40,width:'100%'}}>\n                <Header size='large'>{currentQuestion.question}</Header>\n                <p>\n                            <span className=\"left\" style={{ float: 'left' }}>{currentQuestionIndex + 1} of {numberOfQuestions}</span>\n                            <p style={{color:'red'}} className={classnames('right valid', {\n                                'warning': time.distance <= 120000,\n                                'invalid': time.distance < 30000\n                            })}>Timer: &nbsp;\n                                {time.minutes}:{time.seconds}\n                            </p>\n                        </p>\n        <Card.Content>\n        <div>\n        <div className=\"options-container\">\n         <Button onClick={this.handleOptionClick} className=\"option\" fluid primary style={{marginTop:20,borderRadius:20}}>{currentQuestion.optionA}</Button>\n         <Button onClick={this.handleOptionClick} className=\"option\" fluid primary style={{marginTop:20,borderRadius:20}}>{currentQuestion.optionB}</Button>\n         <Button onClick={this.handleOptionClick} className=\"option\" fluid primary style={{marginTop:20,borderRadius:20}}>{currentQuestion.optionC}</Button>\n         <Button onClick={this.handleOptionClick} className=\"option\" fluid primary style={{marginTop:20,borderRadius:20}}>{currentQuestion.optionD}</Button>\n         </div>\n    \n        </div>\n        </Card.Content>\n        <Card.Content>\n        <Button.Group>\n            <Button positive id=\"previous-button\" className={classnames('', {'disable': this.state.previousButtonDisabled})}  onClick={this.handleButtonClick} labelPosition='left' icon='left chevron' content='Previous' />\n            <Button positive id=\"quit-button\" onClick={this.handleButtonClick} icon='close' content='Quit' />\n            <Button positive id=\"next-button\" className={classnames('', {'disable': this.state.nextButtonDisabled})} onClick={this.handleButtonClick} labelPosition='right' icon='right chevron' content='Next' />\n        </Button.Group>\n        </Card.Content>\n        </Card>\n        </Container>\n            </Fragment>\n        );\n    }\n}\n\nexport default Play;","import React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { List, Card, Container,Button,Icon, Header, Divider } from 'semantic-ui-react'\nclass QuizSummary extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            score: 0,\n            numberOfQuestions: 0,\n            numberOfAnsweredQuestions: 0,\n            correctAnswers: 0,\n            wrongAnswers: 0,\n            hintsUsed: 0,\n            fiftyFiftyUsed: 0\n        };\n    }\n\n    componentDidMount () {\n        const { state } = this.props.location;\n        if (state) {\n            this.setState({\n                score: (state.score / state.numberOfQuestions) * 100,\n                numberOfQuestions: state.numberOfQuestions,\n                numberOfAnsweredQuestions: state.numberOfAnsweredQuestions,\n                correctAnswers: state.correctAnswers,\n                wrongAnswers: state.wrongAnswers,\n                hintsUsed: state.hintsUsed,\n                fiftyFiftyUsed: state.fiftyFiftyUsed\n            });\n        }\n    }\n\n    render () {\n        const { state } = this.props.location;\n        let stats, remark;\n        const userScore = this.state.score;\n\n        if (userScore <= 30 ) {\n            remark = 'You need more practice!';\n        } else if (userScore > 30 && userScore <= 50) {\n            remark = 'Better luck next time!';\n        } else if (userScore <= 70 && userScore > 50) {\n            remark = 'You can do better!';\n        } else if (userScore >= 71 && userScore <= 84) {\n            remark = 'You did great!';\n        } else {\n            remark = 'You\\'re an absolute genius!';\n        }\n\n        if (state !== undefined) {\n            stats = (\n                <Fragment>\n                     <Header size='huge'>Your time is up!</Header>\n                    \n                    <div className=\"container stats\">\n                         <Header size='medium'>{remark}</Header>\n                         <Header size='medium'>Your Score: {this.state.score.toFixed(0)}&#37;</Header>\n                        <div>\n                        <p>Total questions: {this.state.numberOfQuestions} </p>\n                 \n\n                        <p>Attempted questions: {this.state.numberOfAnsweredQuestions} </p>\n                        \n\n                        <p>Number of Correct Answers: {this.state.correctAnswers}</p>\n                      \n\n                        <p>Number of Wrong Answers:  {this.state.wrongAnswers}</p>\n                        </div>\n\n\n                    </div>\n                    \n                    <div style={{marginTop:20}}>\n                    <Link to=\"/play/quiz\">\n                    <Button primary style={{marginTop:20}}> <Icon name='redo'/>Play Again</Button>\n                    </Link>\n                   \n                    <Link to=\"/\">\n                    <Button primary style={{marginTop:20}}> <Icon name='backward'/>Back to Home</Button>\n                    </Link>\n\n                    \n                    </div>\n            \n                </Fragment>\n            );\n        } else {\n            stats = (\n                <section>\n                    <Header size='huge'>No Statistics Available!</Header>\n                    <Link to=\"/play/quiz\">\n                    <Button primary style={{marginTop:20}}> <Icon name='play circle outline' />Take the Quiz!</Button>\n                    </Link>\n                    <Link to=\"/\">\n                    <Button primary style={{marginTop:20}}> <Icon name='backward' />Back to Home</Button>\n                    </Link>\n                    \n                </section>\n            );\n        }\n        return (\n            <Fragment>\n                <Helmet><title>Brand Quiz || Summary</title></Helmet>\n                <Container fluid style={{textAlign:\"center\"}}>\n                <Card fluid style={{padding:40}}>\n               \n                <Card.Content>\n                <div>\n                {stats}\n                </div>\n                </Card.Content>\n                </Card>\n                </Container>\n            </Fragment>\n        );\n    }\n}\n\nexport default QuizSummary;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport QuizInstructions from './components/quiz/QuizInstructions';\nimport Play from './components/quiz/Play';\nimport QuizSummary from './components/quiz/QuizSummary';\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/play/instructions\" exact component={QuizInstructions} />\n      <Route path=\"/play/quiz\" exact component={Play} />\n      <Route path=\"/play/quizSummary\" exact component={QuizSummary} />\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/@mdi/font/css/materialdesignicons.min.css';\nimport '../node_modules/materialize-css/dist/css/materialize.min.css';\nimport '../node_modules/materialize-css/dist/js/materialize.min.js';\nimport './styles/styles.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}